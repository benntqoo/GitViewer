apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

// 獲取 版本號
def version = 0
static def getVersionCodeByDate(int times) {
    def date = new Date().format('yyyyMMdd') + times
    return Integer.valueOf(date)
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.jrtou.gitviewer"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode getVersionCodeByDate(version)
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            def buildMode = variant.buildType.name
            def apkName
            if (buildMode == "release") apkName = "GitViewer_release_${variant.versionName}_${variant.versionCode}.apk"
            else apkName = "GitViewer_debug_${variant.versionName}_${variant.versionCode}.apk"
            outputFileName = apkName
        }
    }

    //開啟 dataBinding
    dataBinding {
        enabled = true
    }

//    kapt {
//        generateStubs = true //room 使用生成文件
//    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.0.2'

    //UI component
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.fragment:fragment-ktx:1.0.0'
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    //viewModel and liveData
    implementation "androidx.lifecycle:lifecycle-extensions:$live_data_version"
    kapt "androidx.lifecycle:lifecycle-compiler:$live_data_version"

    //room
    implementation "android.arch.persistence.room:runtime:$room_version"
    kapt "android.arch.persistence.room:compiler:$room_version"

    //Test
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //******** Third party ********//
    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit_version"
    //okhttp
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    //RXKotlin
    implementation 'io.reactivex.rxjava2:rxkotlin:2.3.0'

    //RxLifecycle
    implementation "com.trello.rxlifecycle2:rxlifecycle-kotlin:$rxlifecycle_version"
    implementation "com.trello.rxlifecycle2:rxlifecycle-components:$rxlifecycle_version"
    //Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    implementation "com.github.bumptech.glide:annotations:$glide_version"
    implementation "com.github.bumptech.glide:okhttp3-integration:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    //joda
    implementation 'joda-time:joda-time:2.10'
}